// -*- C++ -*-
//
// ----------------------------------------------------------------------
//
//                           Brad T. Aagaard
//                        U.S. Geological Survey
//
// <LicenseText>
//
// ----------------------------------------------------------------------
//

/**
 * @file INSTALL
 * 
 * @brief Installation instructions
 *
 * See \link libsrc/query/README libsrc/query/README \endlink for a
 * description of the velocity model querying software and how to use
 * it.
 *
 * @section prerequisites Software Prerequisites
 *
 * @subsection general General
 * 
 * <ol>
 * <li> gzip software<br>
 * version 1.3.3 is known to work
 *
 * Gzip is required to uncompress the database file and the software
 * tar ball. See \ref knownissues "Known Issues" for more information.
 *
 * </ol>
 *
 * @subsection euclid Euclid - Etree database library
 * http://www-2.cs.cmu.edu/~euclid/
 *
 * <ol>
 * <li> Download the euclid source code from http://www-2.cs.cmu.edu/~euclid.
 *
 * <li> Edit the Makefile.
 *
 * Go to the libsrc directory. Edit the Makefile to suit your
 * system. Some example Makefiles can be found on the USGS EHZ ftp
 * server
 * (ftp://ehzftp.wr.usgs.gov/baagaard/cencalvm/euclid3/Makefiles). These
 * examples assume the environment variable ETREE_LIBDIR has been set
 * (see below).
 *
 * Note: The '-DALIGNMENT' flag appears to be required on all big
 * endian systems. The code will compile without it, but you will get
 * core dumps, segmentation faults, and/or bus errors if you don't use
 * it.
 *
 * <li> Build the library.
 *
 * Type make and copy the library and all the header files to your
 * favorite local install directory unless they are put there in the
 * Makefile.
 *
 * <li> Set environment variables.
 *
 * If the libraries and header files are not installed in system
 * directories, set the environment variables ETREE_LIBDIR,
 * ETREE_INCDIR, and LD_LIBRARY_PATH (or the equivalent) accordingly
 * (you probably want to do this in your .bashrc or .cshrc file or a
 * file that is included by them so that these are set automatically
 * every time you log in). If libetree.so is in /home/tools/etree/lib
 * and header files are in /home/tools/etree/include, then:
 *
 * <ul>
 * <li> bash shell users
 *
\verbatim
export ETREE_LIBDIR=/home/tools/etree/libsrc
export ETREE_INCDIR=/home/tools/etree/libsrc
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${ETREE_LIBDIR}
\endverbatim
 *
 * <li> tcsh shell users
\verbatim
setenv ETREE_LIBDIR /home/tools/etree/libsrc
setenv ETREE_INCDIR /home/tools/etree/libsrc
setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${ETREE_LIBDIR}
\endverbatim
 *
 * </ul>
 *
 * </ol>
 *
 * @subsection proj4 proj4 - Cartographic projections library
 * http://proj.maptools.org/<br>
 * version 4.4.9 is known to work
 *
 * <ol>
 * <li> Download the proj4 source code from http://proj.maptools.org/.
 * <li> Run configure.  Helpful arguments include '--prefix=INSTALL_DIR.
 * <li> Run 'make' and then 'make install'.
 *
 * Although not required, it is useful to download the NAD datum
 * corrections, so that you can use proj4 to convert b/t NAD27 and
 * NAD83/WGS84 datums. These corrections are in proj-nad27-1.2.tar.gz,
 * which should be unpacked into the nad directory.
 *
 * <li> If the libraries and files are not installed in system
 * libraries, set the environment variables PROJ4_LIBDIR and
 * PROJ4_INCDIR accordingly (you probably want to do this in your
 * .bashrc or .cshrc file or a file that is included by them so that
 * these are set automatically every time you log in). If libproj.so
 * is in /home/tools/proj4/lib and header files are in
 * /home/tools/proj4/include, then:
 *
 * <ul>
 * <li> bash shell users
 *
\verbatim
export PROJ4_LIBDIR=/usr/local/proj4/lib
export PROJ4_INCDIR=/usr/local/proj4/include
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${PROJ4_LIBDIR}
\endverbatim
 *
 * <li> tcsh shell users
\verbatim
setenv PROJ4_LIBDIR /usr/local/proj4/lib
setenv PROJ4_INCDIR /usr/local/proj4/include
setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${PROJ4_LIBDIR}
\endverbatim
 *
 * </ul>
 *
 * </ol>
 *
 * @section optionalsoftare Install unit testing software (OPTIONAL)
 *
 * @subsection cppunit cppunit - C++ unit testing library
 * http://cppunit.sourceforge.net<br>
 * version 1.10.2 is known to work
 *
 * This library is used in the unit testing of the code. It is only
 * used for testing and skipping this step will not affect the
 * functionality of the velocity model software.
 *
 * <ol>
 *
 * <li> Download the cppunit source code from
 * http://cppunit.sourceforge.net, or install the binary package for
 * your operating system (some linux distributions have cppunit
 * packages).
 *
 * <li> Run 'configure' and then 'make' and 'make install'.
 *
 * <li> If the libraries and files are not installed in system
 * libraries, set the environment variables CPPUNIT_LIBDIR and
 * CPPUNIT_INCDIR accordingly, in the same manner as you did for the
 * required software.
 *
 * </ol>
 *
 * @section cencalvm cencalvm - USGS Central CA velocity model query software
 * ftp://ehzftp.wr.usgs.gov/baagaard/cencalvm/software
 *
 * <ol>
 *
 * <li> Run 'configure' and then 'make' and 'make install'.
 *
 * Use 'configure --help' to see all of the arguments configure
 * accepts. After 'make install', the header files, libraries, and
 * executables can be found under the PREFIX directory (defined by
 * --prefix=PREFIX when running configure).
 *
 * <ul>
 *
 * <li> Euclid and Proj4 not in default paths
 *
 * Configure will fail if it cannot find the header files and
 * libraries for Euclid and Proj4. You will need to set CPPFLAGS and
 * LDFLAGS when running configure. For example if you have defined the
 * environment variables as suggested above, you can simply run
 * configure using
\verbatim
configure \
    CPPFLAGS="-I${ETREE_INCDIR} -I${PROJ4_INCDIR}" \
    LDFLAGS="-L${ETREE_LIBDIR} -L${PROJ4_LIBDIR}"
\endverbatim
 *
 * <li> Changing the compilers.
 *
 * You can change the compilers configure will use by setting CC (C),
 * CXX (C++), and FC (Fortran) when running configure. For example, to
 * build using the Sunpro compilers
\verbatim
configure FC=f95 CC=cc CXX=CC
\endverbatim
 *
 * @note These compilers must be binary compatible! The libraries
 * built by the C++ compiler must be able to be used by the C and
 * Fortran compilers. For example, you CANNOT mix compilers from
 * gcc-3.x and gcc-4.x.
 *
 * </ul>
 *
 * <li> OPTIONAL
 *
 * If you have cppunit and enabled testing (--enable-testing), then
 * you can run 'make check' to run the unit tests.
 *
 * <li> Download the velocity model(s) from
 * ftp://ehzftp.wr.usgs.gov/baagaard/cencalvm/database
 *
 * In the current configuration, the detailed model is required while
 * the extended (regional) model is optional. Use of the extended model is
 * disabled by default. See \link libsrc/query/README libsrc/query/README
 * \endlink for details on how to enable use of the extended model.
 *
 * Download the MD5SUM files and check to the integrity of the
 * downloaded file by running 'md5sum -c MD5SUMS_GZIPPED' for the
 * detailed model and 'md5sum -c MD5SUMS_GZIPPEDEXT' for the extended
 * model. After gunzipping the file, you can again check the integrity
 * of the file by running 'md5sum -c MD5SUMS' for the detailed model
 * and 'md5sum -c MD5SUMSEXT' for the extended model. Each time you
 * should get output reporting that the file is OK.
 *
 * <li> OPTIONAL
 *
 * Run the examples for the languages you are interested in. The
 * examples are in the examples/query directory. See \link
 * examples/query/README examples/query/README \endlink for more
 * information.
 *
 * <li> Set environment variables to find libraries and executables
 * that are in PREFIX. If the libraries and executables are not
 * installed in system libraries, set the environment variables
 * LD_LIBRARY_PATH and PATH (or their equivalent) accordingly. You
 * will probably want to do this in your .bashrc or .cshrc file or a
 * file that is included by them so that these are set automatically
 * every time you log in.
 *
 * <ul>
 * <li> bash shell users
 *
\verbatim
export CENCALVM_DIR=/home/johndoe/cencalvm
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${CENCALVM_DIR}/lib
export PATH=${PATH}:${CENCALVM_DIR}/bin
\endverbatim
 *
 * <li> tcsh shell users
\verbatim
setenv CENCALVM_DIR /home/johndoe/cencalvm
setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:${CENCALVM_DIR}/lib
setenv PATH ${PATH}:${CENCALVM_DIR}/bin
\endverbatim
 *
 * </ul>
 * 
 * </ol>
 *
 * @section knownissues Known Issues
 *
 * <ul>
 *
 * <li> Uncompressing the database file gives a 'File too large'
 * error.
 *
 * Older versions of gzip may not be able to uncompress the large
 * etree database file with is 7.5 GB uncompressed. The workaround is
 * to get gzip version 1.3.3 or later.
 *
 * <li> Configure warning 'WARNING: etree.h: present but cannot be compiled'.
 *
 * The Sunpro compiler chokes on the btree.h header file because it
 * contains an empty declaration. The workaround is to change line 39
 * of btree.h from
\verbatim
typedef struct btree_t {} btree_t;
\endverbatim
to
\verbatim
typedef struct btree_t { int a; } btree_t;
\endverbatim
 *
 * </ul>
 *
 * @section help Getting Help
 *
 * If you run into problems installing this software, please send an
 * email to Brad Aagaard and include (1) config.log from the top level
 * directory (generated when running configure), (2) a copy of the
 * output showing the error (i.e., dump the output from the command to
 * a file), and (3) a complete description of the problem.
 *
 */


// End of file 
